# These fail randomly
glx@glx_arb_sync_control@timing.*
glx@glx-multithread-texture

# These started crashing for me
glx@glx-visuals-depth -pixmap
glx@glx-visuals-stencil -pixmap

# These either consistently pass or consistently fail depending on the X server version, DDX, etc.
glx@glx_ext_import_context@*

# Random: ../src/util/hash_table.c:311: hash_table_search: Assertion `!key_pointer_is_reserved(ht, key)' failed.
spec@ext_image_dma_buf_import@ext_image_dma_buf_import-refcount-multithread

# Random
# Mostly reported by "Some new flakes found:" and most of them never appear in the failures
KHR-GL46.geometry_shader.primitive_counter.lines_to_line_strip
KHR-GL46.geometry_shader.primitive_counter.lines_to_line_strip_rp
KHR-GL46.geometry_shader.primitive_counter.points_to_line_strip
KHR-GL46.geometry_shader.primitive_counter.points_to_line_strip_rp
KHR-GL46.geometry_shader.primitive_counter.triangles_to_line_strip
KHR-GL46.shaders.uniform_block.random.nested_structs_instance_arrays.4

KHR-GLES3.shaders.uniform_block.random.all_shared_buffer.12
KHR-GLES3.shaders.uniform_block.random.nested_structs_instance_arrays.4

KHR-GLES31.core.geometry_shader.primitive_counter.lines_to_line_strip
KHR-GLES31.core.geometry_shader.primitive_counter.lines_to_line_strip_rp
KHR-GLES31.core.geometry_shader.primitive_counter.points_to_line_strip
KHR-GLES31.core.geometry_shader.primitive_counter.points_to_line_strip_rp
KHR-GLES31.core.geometry_shader.primitive_counter.triangles_to_line_strip
KHR-GLES31.core.geometry_shader.primitive_counter.triangles_to_line_strip_rp

KHR-GLES32.core.geometry_shader.primitive_counter.lines_to_line_strip
KHR-GLES32.core.geometry_shader.primitive_counter.lines_to_line_strip_rp
KHR-GLES32.core.geometry_shader.primitive_counter.points_to_line_strip
KHR-GLES32.core.geometry_shader.primitive_counter.points_to_line_strip_rp
KHR-GLES32.core.geometry_shader.primitive_counter.triangles_to_line_strip
KHR-GLES32.core.geometry_shader.primitive_counter.triangles_to_line_strip_rp

dEQP-GLES3.functional.occlusion_query.conservative_all_occluders
dEQP-GLES3.functional.occlusion_query.conservative_depth_clear
dEQP-GLES3.functional.occlusion_query.conservative_depth_clear_stencil_write
dEQP-GLES3.functional.occlusion_query.conservative_depth_write
dEQP-GLES3.functional.occlusion_query.conservative_depth_write_depth_clear_stencil_write_stencil_clear
dEQP-GLES3.functional.occlusion_query.conservative_scissor
dEQP-GLES3.functional.occlusion_query.conservative_scissor_depth_write_stencil_write_stencil_clear
dEQP-GLES3.functional.occlusion_query.conservative_stencil_clear
dEQP-GLES3.functional.occlusion_query.conservative_stencil_write
dEQP-GLES3.functional.occlusion_query.conservative_stencil_write_stencil_clear
dEQP-GLES3.functional.occlusion_query.all_occluders
dEQP-GLES3.functional.occlusion_query.depth_clear
dEQP-GLES3.functional.occlusion_query.depth_clear_stencil_write
dEQP-GLES3.functional.occlusion_query.depth_write
dEQP-GLES3.functional.occlusion_query.depth_write_depth_clear
dEQP-GLES3.functional.occlusion_query.depth_write_depth_clear_stencil_clear
dEQP-GLES3.functional.occlusion_query.depth_write_depth_clear_stencil_write
dEQP-GLES3.functional.occlusion_query.depth_write_stencil_clear
dEQP-GLES3.functional.occlusion_query.depth_write_stencil_write
dEQP-GLES3.functional.occlusion_query.depth_write_stencil_write_stencil_clear
dEQP-GLES3.functional.occlusion_query.scissor
dEQP-GLES3.functional.occlusion_query.scissor_depth_clear
dEQP-GLES3.functional.occlusion_query.scissor_depth_write_depth_clear_stencil_write
dEQP-GLES3.functional.occlusion_query.scissor_depth_write_stencil_write
dEQP-GLES3.functional.occlusion_query.scissor_stencil_write
dEQP-GLES3.functional.occlusion_query.stencil_clear
dEQP-GLES3.functional.occlusion_query.stencil_write

KHR-GL46.shaders.uniform_block.random.all_shared_buffer.12

# These pass when run separately, but fail when run via deqp-runner
KHR-GL46.texture_query_lod.sampler1D_test
KHR-GL46.texture_query_lod.sampler2D_test
KHR-GL46.texture_query_lod.sampler3D_test
